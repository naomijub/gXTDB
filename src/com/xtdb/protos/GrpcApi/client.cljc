;;;----------------------------------------------------------------------------------
;;; Generated by protoc-gen-clojure.  DO NOT EDIT
;;;
;;; GRPC com.xtdb.protos.GrpcApi Client Implementation
;;;----------------------------------------------------------------------------------
(ns com.xtdb.protos.GrpcApi.client
  (:require [com.xtdb.protos :refer :all]
            [clojure.core.async :as async]
            [protojure.grpc.client.utils :refer [send-unary-params invoke-unary]]
            [promesa.core :as p]
            [protojure.grpc.client.api :as grpc]))

;-----------------------------------------------------------------------------
; GRPC Client Implementation
;-----------------------------------------------------------------------------

(def GrpcApi-service-name "com.xtdb.protos.GrpcApi")

(defn Status
  ([client params] (Status client {} params))
  ([client metadata params]
   (let [input (async/chan 1)
         output (async/chan 1)
         desc {:service "com.xtdb.protos.GrpcApi"
               :method  "Status"
               :input   {:f com.xtdb.protos/new-Empty :ch input}
               :output  {:f com.xtdb.protos/pb->StatusResponse :ch output}
               :metadata metadata}]
     (-> (send-unary-params input params)
         (p/then (fn [_] (invoke-unary client desc output)))))))

